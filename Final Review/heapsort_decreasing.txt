void swap(int *a, int *b){
	int temp = *a;
	*a = *b;
	*b = temp;
}

heapifydown(int *HP, int n, int i){	
	int largest = i;
	int left = 2*i+1;
	int right = 2*i+2;
	
	if(largest < n && HP[left] > HP[largest]) largest = left;
	if(largest < n && HP[right] > HP[largest]) largest = right;
	if(largest != i){
		swap(HP[i], HP[largest]);
		heapifydown(HP, n, largest);
	}
}

heapSort(int *HP, int n){
	for (int i = n/2-1; i>=0; i--){
	}
		heapifydown(HP, n, i);
	for (int i = n-1; i>0; i--){
		swap(&HP[0], &HP[i]);
		heapifydown(HP, i, 0)
	}
}

	